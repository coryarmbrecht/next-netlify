name: Lobste.rs api import
on:
  workflow_dispatch: {}
  push:
    paths:
      - .github/workflows/flat.yml
  schedule:
    - cron: 0 * * * *
jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Fetch newest data
        uses: githubocto/flat@v3
        with:
          http_url: https://lobste.rs/newest.json
          downloaded_filename: newest.json
      - name: Neo4j Import
        uses: johnymontana/flat-graph@v1.2
        with:
          neo4j-user: ${{secrets.NEO4J_USER}}
          neo4j-password: ${{secrets.NEO4J_PASSWORD}}
          neo4j-url: ${{secrets.NEO4J_URI}}
          filename: newest.json
          cypher-query: >
            UNWIND $value AS article
            MERGE (s: User { username: article.submitter_user.username })
            SET s.created = DateTime(article.submitter_user.created_at),
                s.karma = article.submitter_user.karma,
                s.about = article.submitter_user.about,
                s.avatar = "https://lobste.rs" + article.submitter_user.avatar_url
            MERGE (i: User { username: article.submitter_user.invited_by_user })
            MERGE (i) < -[: INVITED_BY] - (s)
            MERGE (a: Article { short_id: article.short_id })
            SET a.url = article.article_url,
                a.score = article.score,
                a.title = article.title,
                a.comments = article.comments_url,
                a.created_at = DateTime(article.created_at)
            MERGE (s) - [: SUBMITTED] -> (a)
            WITH article, a
            UNWIND article.tags AS tag
            MERGE (t: Tag { name: tag })
            MERGE (a) - [: HAS_TAG] -> (t)
