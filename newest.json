[{"short_id":"gwvje6","short_id_url":"https://lobste.rs/s/gwvje6","created_at":"2021-09-21T08:57:09.000-05:00","title":"Biased Reference Counting: Minimizing Atomic Operations in Garbage Collection (2018)","url":"http://iacoma.cs.uiuc.edu/iacoma-papers/pact18.pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eReference counting (RC) is one of the two fundamental approaches to garbage collection. It has the desirable characteristics of low memory overhead and short pause times, which are key in today‚Äôs interactive mobile platforms. However, RC has a higher execution time overhead than its counterpart, tracing garbage collection. The reason is that RC implementations maintain per-object counters, which must be continually updated. In particular, the execution time overhead is high in environments where low memory overhead is critical and, therefore, non-deferred RC is used. This is because the counter updates need to be performed atomically.\u003cbr\u003e\nTo address this problem, this paper proposes a novel algorithm called Biased Reference Counting (BRC), which significantly improves the performance of non-deferred RC. BRC is based on the observation that most objects are only accessed by a single thread, which allows most RC operations to be performed non-atomically. BRC leverages this by biasing each object towards a specific thread, and keeping two counters for each object ‚Äî one updated by the owner thread and another updated by the other threads. This allows the owner thread to perform RC operations non-atomically, while the other threads update the second counter atomically.\u003cbr\u003e\nWe implement BRC in the Swift programming language run- time, and evaluate it with client and server programs. We find that BRC makes each RC operation more than twice faster in the common case. As a result, BRC reduces the average execution time of client programs by 22.5%, and boosts the average throughput of server programs by 7.3%.\u003c/p\u003e\n","comments_url":"https://lobste.rs/s/gwvje6/biased_reference_counting_minimizing","submitter_user":{"username":"dbremner","created_at":"2012-09-06T19:01:18.000-05:00","is_admin":false,"about":"C, C++, C#, and recently Python, Swift, and Objective-C.  \r\nLearning Scala.","is_moderator":false,"karma":2278,"avatar_url":"/avatars/dbremner-100.png","invited_by_user":"pushcx","github_username":"dbremner"},"tags":["pdf","programming"]},{"short_id":"po8sfa","short_id_url":"https://lobste.rs/s/po8sfa","created_at":"2021-09-21T08:21:12.000-05:00","title":"DataStation, open source data IDE, 0.1.0 is released","url":"https://datastation.multiprocess.io/docs/0.1.0-release-notes.html","score":1,"flags":0,"comment_count":0,"description":"","comments_url":"https://lobste.rs/s/po8sfa/datastation_open_source_data_ide_0_1_0_is","submitter_user":{"username":"eatonphil","created_at":"2019-09-01T20:23:02.000-05:00","is_admin":false,"about":"Looking for what's next! Previously Oracle, Capsule8, Linode.\r\n\r\nBuilding an open-source data IDE at github.com/multiprocessio/datastation.\r\n\r\nTech writing at notes.eatonphil.com.\r\n\r\nSay hi! phil at eatonphil.com.","is_moderator":false,"karma":1334,"avatar_url":"/avatars/eatonphil-100.png","invited_by_user":"calvin","github_username":"eatonphil","twitter_username":"phil_eaton"},"tags":["databases","programming","release"]},{"short_id":"vapsxn","short_id_url":"https://lobste.rs/s/vapsxn","created_at":"2021-09-21T08:11:11.000-05:00","title":"Reading Code is a Skill","url":"https://trishagee.com/2020/09/07/reading-code-is-a-skill/","score":1,"flags":0,"comment_count":0,"description":"","comments_url":"https://lobste.rs/s/vapsxn/reading_code_is_skill","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.","is_moderator":false,"karma":83565,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["practices","rant"]},{"short_id":"pnihkf","short_id_url":"https://lobste.rs/s/pnihkf","created_at":"2021-09-21T07:59:20.000-05:00","title":"7 ways to pass a closure as an argument in Swift","url":"https://sarunw.com/posts/different-ways-to-pass-closure-as-argument/","score":1,"flags":0,"comment_count":0,"description":"","comments_url":"https://lobste.rs/s/pnihkf/7_ways_pass_closure_as_argument_swift","submitter_user":{"username":"napkindrawing","created_at":"2014-05-14T10:03:04.000-05:00","is_admin":false,"about":"Dad. Tinkerer. Software developer. he/they.","is_moderator":false,"karma":2335,"avatar_url":"/avatars/napkindrawing-100.png","invited_by_user":"howdoipython"},"tags":["swift"]},{"short_id":"ds6h7u","short_id_url":"https://lobste.rs/s/ds6h7u","created_at":"2021-09-21T07:53:57.000-05:00","title":"nickbild/go_motion: Simplify stop motion animation with machine learning","url":"https://github.com/nickbild/go_motion","score":1,"flags":0,"comment_count":0,"description":"","comments_url":"https://lobste.rs/s/ds6h7u/nickbild_go_motion_simplify_stop_motion","submitter_user":{"username":"napkindrawing","created_at":"2014-05-14T10:03:04.000-05:00","is_admin":false,"about":"Dad. Tinkerer. Software developer. he/they.","is_moderator":false,"karma":2335,"avatar_url":"/avatars/napkindrawing-100.png","invited_by_user":"howdoipython"},"tags":["ai"]},{"short_id":"u4pn5w","short_id_url":"https://lobste.rs/s/u4pn5w","created_at":"2021-09-21T07:49:34.000-05:00","title":"More Casio Watch Mods (LCD Colors, Transparent Display, Micro SD, Strap Remover)","url":"https://n-o-d-e.net/watch_mods.html","score":2,"flags":1,"comment_count":0,"description":"","comments_url":"https://lobste.rs/s/u4pn5w/more_casio_watch_mods_lcd_colors","submitter_user":{"username":"napkindrawing","created_at":"2014-05-14T10:03:04.000-05:00","is_admin":false,"about":"Dad. Tinkerer. Software developer. he/they.","is_moderator":false,"karma":2335,"avatar_url":"/avatars/napkindrawing-100.png","invited_by_user":"howdoipython"},"tags":["hardware"]},{"short_id":"pqz7j4","short_id_url":"https://lobste.rs/s/pqz7j4","created_at":"2021-09-21T05:39:58.000-05:00","title":"Senior Software Engineer - HDR Enablement","url":"https://global-redhat.icims.com/jobs/89344/senior-software-engineer---hdr-enablement/job","score":3,"flags":0,"comment_count":2,"description":"","comments_url":"https://lobste.rs/s/pqz7j4/senior_software_engineer_hdr_enablement","submitter_user":{"username":"JulianWgs","created_at":"2020-09-24T14:54:13.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":597,"avatar_url":"/avatars/JulianWgs-100.png","invited_by_user":"355E3B","github_username":"JulianWgs"},"tags":["graphics","job","linux"]},{"short_id":"nwf4pn","short_id_url":"https://lobste.rs/s/nwf4pn","created_at":"2021-09-21T04:52:12.000-05:00","title":"Public Domain Operating System","url":"http://www.pdos.org/","score":5,"flags":0,"comment_count":0,"description":"","comments_url":"https://lobste.rs/s/nwf4pn/public_domain_operating_system","submitter_user":{"username":"ethoh","created_at":"2019-08-14T20:04:05.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":4157,"avatar_url":"/avatars/ethoh-100.png","invited_by_user":"dwaite"},"tags":["osdev"]},{"short_id":"btgv2v","short_id_url":"https://lobste.rs/s/btgv2v","created_at":"2021-09-21T01:06:28.000-05:00","title":"Guix-HPC ‚Äî What‚Äôs in a package","url":"https://hpc.guix.info/blog/2021/09/whats-in-a-package/","score":5,"flags":0,"comment_count":3,"description":"","comments_url":"https://lobste.rs/s/btgv2v/guix_hpc_what_s_package","submitter_user":{"username":"kir0ul","created_at":"2021-02-06T13:51:10.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":126,"avatar_url":"/avatars/kir0ul-100.png","invited_by_user":"Lomanic","github_username":"kir0ul"},"tags":["ai","lisp","python","science"]},{"short_id":"eovput","short_id_url":"https://lobste.rs/s/eovput","created_at":"2021-09-21T00:12:19.000-05:00","title":"Native fuzzing will be in Go 1.18","url":"https://twitter.com/katie_hockman/status/1440082486692773897","score":9,"flags":0,"comment_count":2,"description":"","comments_url":"https://lobste.rs/s/eovput/native_fuzzing_will_be_go_1_18","submitter_user":{"username":"christianscott","created_at":"2021-09-01T00:36:01.000-05:00","is_admin":false,"about":":)","is_moderator":false,"karma":12,"avatar_url":"/avatars/christianscott-100.png","invited_by_user":"asym"},"tags":["go"]},{"short_id":"mahlxq","short_id_url":"https://lobste.rs/s/mahlxq","created_at":"2021-09-20T23:52:39.000-05:00","title":"Rust adds initial support for m68k","url":"https://github.com/rust-lang/rust/pull/88321","score":10,"flags":0,"comment_count":0,"description":"","comments_url":"https://lobste.rs/s/mahlxq/rust_adds_initial_support_for_m68k","submitter_user":{"username":"sanxiyn","created_at":"2015-01-21T09:51:34.000-06:00","is_admin":false,"about":"I made the initial port of Rust to ARM and Android.","is_moderator":false,"karma":8400,"avatar_url":"/avatars/sanxiyn-100.png","invited_by_user":"steveklabnik","github_username":"sanxiyn","twitter_username":"sanxiyn"},"tags":["rust"]},{"short_id":"davnja","short_id_url":"https://lobste.rs/s/davnja","created_at":"2021-09-20T22:57:00.000-05:00","title":"C++ Return: std::any, std::optional, or std::variant?","url":"https://www.cppstories.com/2021/sphero-cpp-return/","score":3,"flags":0,"comment_count":1,"description":"","comments_url":"https://lobste.rs/s/davnja/c_return_std_any_std_optional_std_variant","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":12363,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["c++"]},{"short_id":"hk1f2u","short_id_url":"https://lobste.rs/s/hk1f2u","created_at":"2021-09-20T22:18:38.000-05:00","title":"How I patched Python to include Ruby's inline 'if'","url":"https://opensource.com/article/21/9/python-else-less","score":4,"flags":0,"comment_count":2,"description":"","comments_url":"https://lobste.rs/s/hk1f2u/how_i_patched_python_include_ruby_s_inline","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.","is_moderator":false,"karma":83565,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["python"]},{"short_id":"cugyrz","short_id_url":"https://lobste.rs/s/cugyrz","created_at":"2021-09-20T21:33:15.000-05:00","title":"Safe and Efficient Hybrid Memory Management for Java (2015)","url":"https://www.youtube.com/watch?v=3JphI1Z0MTk","score":1,"flags":0,"comment_count":0,"description":"","comments_url":"https://lobste.rs/s/cugyrz/safe_efficient_hybrid_memory_management","submitter_user":{"username":"dbremner","created_at":"2012-09-06T19:01:18.000-05:00","is_admin":false,"about":"C, C++, C#, and recently Python, Swift, and Objective-C.  \r\nLearning Scala.","is_moderator":false,"karma":2278,"avatar_url":"/avatars/dbremner-100.png","invited_by_user":"pushcx","github_username":"dbremner"},"tags":["java","video"]},{"short_id":"tqdcjq","short_id_url":"https://lobste.rs/s/tqdcjq","created_at":"2021-09-20T21:23:50.000-05:00","title":"Generation Scavenging: A Non-Disruptive High Performance Storage Reclamation Algorithm (1984)","url":"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.122.4295\u0026rep=rep1\u0026type=pdf","score":1,"flags":0,"comment_count":0,"description":"\u003cp\u003eMany interactive computing environments provide automatic storage reclamation and virtual memory to ease the burden of managing storage. Unfortunately, many storage reclamation algorithms impede interaction with distracting pauses. Generation Scavenging is a reclamation algorithm that has no noticeable pauses, eliminates page faults for transient objects, compacts objects without resorting to indirection, and reclaims circular structures, in one third the time of traditional approaches.\nWe have incorporated Generation Scavenging in Berkeley Smalltalk (BS), our Smalltalk-80* implementation, and instrumented it to obtain performance data. We are also designing a microprocessor with hardware support for Generation Scavenging.\nKeywords: garbage collection, generation, personal computer, real time, scavenge, Smalltalk, workstation, virtual memory\u003c/p\u003e\n","comments_url":"https://lobste.rs/s/tqdcjq/generation_scavenging_non_disruptive","submitter_user":{"username":"dbremner","created_at":"2012-09-06T19:01:18.000-05:00","is_admin":false,"about":"C, C++, C#, and recently Python, Swift, and Objective-C.  \r\nLearning Scala.","is_moderator":false,"karma":2278,"avatar_url":"/avatars/dbremner-100.png","invited_by_user":"pushcx","github_username":"dbremner"},"tags":["pdf","programming"]},{"short_id":"amjiaq","short_id_url":"https://lobste.rs/s/amjiaq","created_at":"2021-09-20T20:31:55.000-05:00","title":"FD 100","url":"https://susam.in/blog/fd-100.html","score":11,"flags":0,"comment_count":0,"description":"","comments_url":"https://lobste.rs/s/amjiaq/fd_100","submitter_user":{"username":"calvin","created_at":"2014-07-01T06:47:13.000-05:00","is_admin":false,"about":"Soon we will all have special names... names designed to make the cathode ray tube resonate.","is_moderator":false,"karma":83565,"avatar_url":"/avatars/calvin-100.png","invited_by_user":"nbyouri","github_username":"NattyNarwhal"},"tags":["programming"]},{"short_id":"479xgq","short_id_url":"https://lobste.rs/s/479xgq","created_at":"2021-09-20T18:21:19.000-05:00","title":"iOS 15 iCloud Private Relay Vulnerability Identified","url":"https://fingerprintjs.com/blog/ios15-icloud-private-relay-vulnerability/","score":6,"flags":0,"comment_count":1,"description":"","comments_url":"https://lobste.rs/s/479xgq/ios_15_icloud_private_relay","submitter_user":{"username":"fro","created_at":"2016-04-13T15:27:31.000-05:00","is_admin":false,"about":"","is_moderator":false,"karma":1392,"avatar_url":"/avatars/fro-100.png","invited_by_user":"xero"},"tags":["ios","privacy"]},{"short_id":"kcxsam","short_id_url":"https://lobste.rs/s/kcxsam","created_at":"2021-09-20T14:53:39.000-05:00","title":"Explaining Rust Analyzer 15: Error Resilient Parsing","url":"https://www.youtube.com/watch?v=0HlrqwLjCxA","score":6,"flags":0,"comment_count":1,"description":"","comments_url":"https://lobste.rs/s/kcxsam/explaining_rust_analyzer_15_error","submitter_user":{"username":"matklad","created_at":"2019-07-02T07:23:10.000-05:00","is_admin":false,"about":"Working on IDE support for the Rust language.\r\n\r\nhttps://github.com/matklad","is_moderator":false,"karma":2184,"avatar_url":"/avatars/matklad-100.png","invited_by_user":"skade","github_username":"matklad"},"tags":["compilers","rust","video"]},{"short_id":"ble1tk","short_id_url":"https://lobste.rs/s/ble1tk","created_at":"2021-09-20T14:43:55.000-05:00","title":"Autumn Lisp Game Jam 2021","url":"https://itch.io/jam/autumn-lisp-game-jam-2021","score":18,"flags":0,"comment_count":10,"description":"","comments_url":"https://lobste.rs/s/ble1tk/autumn_lisp_game_jam_2021","submitter_user":{"username":"borodust","created_at":"2018-06-20T09:01:34.000-05:00","is_admin":false,"about":"Aware software engineer","is_moderator":false,"karma":20,"avatar_url":"/avatars/borodust-100.png","invited_by_user":"river","github_username":"borodust","keybase_signatures":[{"kb_username":"borodust","sig_hash":"6ee340fd872af01ce9cdf5ac2edfc931c1338251d708a380544fc8dc9a5a02580f"}]},"tags":["games","lisp"]},{"short_id":"saw2gh","short_id_url":"https://lobste.rs/s/saw2gh","created_at":"2021-09-20T14:28:41.000-05:00","title":"Expose any Qt5 program via VNC","url":"https://raymii.org/s/articles/Expose_any_QT_program_via_VNC.html","score":10,"flags":0,"comment_count":3,"description":"","comments_url":"https://lobste.rs/s/saw2gh/expose_any_qt5_program_via_vnc","submitter_user":{"username":"raymii","created_at":"2013-11-20T11:58:43.000-06:00","is_admin":false,"about":"üêã\r\nhttps://raymii.org","is_moderator":false,"karma":12363,"avatar_url":"/avatars/raymii-100.png","invited_by_user":"journeysquid"},"tags":["linux"]},{"short_id":"o4eus2","short_id_url":"https://lobste.rs/s/o4eus2","created_at":"2021-09-20T14:06:44.000-05:00","title":"Fuzzing Zig Code Using AFL++","url":"https://www.ryanliptak.com/blog/fuzzing-zig-code/","score":11,"flags":0,"comment_count":0,"description":"","comments_url":"https://lobste.rs/s/o4eus2/fuzzing_zig_code_using_afl","submitter_user":{"username":"g-w1","created_at":"2021-03-13T20:03:22.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":83,"avatar_url":"/avatars/g-w1-100.png","invited_by_user":"vaibhavsagar","github_username":"g-w1"},"tags":["zig"]},{"short_id":"tppogy","short_id_url":"https://lobste.rs/s/tppogy","created_at":"2021-09-20T14:02:19.000-05:00","title":"AI Can Write Code Like Humans‚ÄîBugs and All","url":"https://www.wired.com/story/ai-write-code-like-humans-bugs/","score":1,"flags":0,"comment_count":0,"description":"","comments_url":"https://lobste.rs/s/tppogy/ai_can_write_code_like_humans_bugs_all","submitter_user":{"username":"mempko","created_at":"2014-03-02T09:29:45.000-06:00","is_admin":false,"about":"I'm a Free Software developer. \r\nSoftware is in a unique position to improve the world, and in a unique position to destroy it.\r\n\r\n* My [website](http://mempko.com)\r\n* My [projects](http://mempko.com/code.html)\r\n* My [github](http://github.com/mempko)\r\n* My [twitter](http://twitter.com/mempko)\r\n","is_moderator":false,"karma":2606,"avatar_url":"/avatars/mempko-100.png","invited_by_user":"cgrinds","github_username":"mempko","twitter_username":"mempko"},"tags":["ai","programming"]},{"short_id":"boxqdn","short_id_url":"https://lobste.rs/s/boxqdn","created_at":"2021-09-20T13:31:35.000-05:00","title":"Choosing a database model for a hierarchical content","url":"https://www.aleksandra.codes/comments-db-model","score":11,"flags":0,"comment_count":0,"description":"","comments_url":"https://lobste.rs/s/boxqdn/choosing_database_model_for","submitter_user":{"username":"ehamberg","created_at":"2014-08-18T02:47:08.000-05:00","is_admin":false,"about":"https://keybase.io/eh","is_moderator":false,"karma":3111,"avatar_url":"/avatars/ehamberg-100.png","invited_by_user":"oleavr"},"tags":["databases"]},{"short_id":"ldfl2j","short_id_url":"https://lobste.rs/s/ldfl2j","created_at":"2021-09-20T13:24:20.000-05:00","title":"Develop an ASP.NET Core Site on Linux","url":"https://quakkels.com/posts/202108_develop_an_aspnetcore_site_on_linux/","score":7,"flags":0,"comment_count":2,"description":"","comments_url":"https://lobste.rs/s/ldfl2j/develop_asp_net_core_site_on_linux","submitter_user":{"username":"quakkels","created_at":"2014-02-13T10:21:21.000-06:00","is_admin":false,"about":"","is_moderator":false,"karma":6,"avatar_url":"/avatars/quakkels-100.png","invited_by_user":"b7j0c"},"tags":["dotnet","linux"]},{"short_id":"qmtiul","short_id_url":"https://lobste.rs/s/qmtiul","created_at":"2021-09-20T12:05:51.000-05:00","title":"Perceus: Garbage Free Reference Counting with Reuse","url":"https://www.microsoft.com/en-us/research/uploads/prod/2020/11/perceus-tr-v4.pdf","score":6,"flags":0,"comment_count":0,"description":"\u003cp\u003eWe introduce Perceus, an algorithm for precise reference counting with reuse and specialization. Starting from a functional core language with explicit control-flow, Perceus emits precise reference counting instructions such that (cycle-free) programs are garbage free, where only live references are retained. This enables further optimizations, like reuse analysis that allows for guaranteed in-place updates at runtime. This in turn enables a novel programming paradigm that we call functional but in-place (FBIP). Much like tail-call optimization enables writing loops with regular function calls, reuse analysis enables writing in-place mutating algorithms in a purely functional way. We give a novel formalization of reference counting in a linear resource calculus, and prove that Perceus is sound and garbage free. We show evidence that Perceus, as implemented in Koka, has good performance and is competitive with other state-of-the-art memory collectors.\u003c/p\u003e\n","comments_url":"https://lobste.rs/s/qmtiul/perceus_garbage_free_reference_counting","submitter_user":{"username":"dbremner","created_at":"2012-09-06T19:01:18.000-05:00","is_admin":false,"about":"C, C++, C#, and recently Python, Swift, and Objective-C.  \r\nLearning Scala.","is_moderator":false,"karma":2278,"avatar_url":"/avatars/dbremner-100.png","invited_by_user":"pushcx","github_username":"dbremner"},"tags":["pdf","programming"]}]